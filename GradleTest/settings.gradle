def initMinshengGradleEnvironment(){
    //属性值从local.properites中读取
    Properties properties = new Properties()
    File propertyFile = new File(rootDir.getAbsolutePath() +"/local.properties")
    properties.load(propertyFile.newDataInputStream())
    //gradle就是gradle对象。它默认是Settings和Project的成员变量。可直接获取
    //ext前缀，表明操作的是外置属性。api是一个新的属性名。前面说过，只在
    //第一次定义或者设置它的时候需要ext前缀
    gradle.ext.api =properties.getProperty('sdk.api')
    gradle.ext.sdkdir = properties.getProperty('sdk.dir')

    /*
      根据Project、Gradle生命周期的介绍，settings对象的创建位于具体Project创建之前
      而Gradle底对象已经创建好了。所以，我们把local.properties的信息读出来后，通过
     extra属性的方式设置到gradle对象中
      而具体Project在执行的时候，就可以直接从gradle对象中得到这些属性了！
    */
    gradle.ext.api =properties.getProperty('sdk.api')
    gradle.ext.sdkDir =properties.getProperty('sdk.dir')
//    gradle.ext.ndkDir =properties.getProperty('ndk.dir')
//    gradle.ext.localDir =properties.getProperty('local.dir')
    //指定debugkeystore文件的位置，debug版apk签名的时候会用到
//    gradle.ext.debugKeystore= properties.getProperty('debug.keystore')
    println"initialize Minsheng Gradle Environment completes..."

    println "in settins.gradle , gradle id is : " + gradle.hashCode()
    println "home dir : " + gradle.gradleHomeDir
    println "user home dir : " + gradle.gradleUserHomeDir
    println "parent : " + gradle.parent
    println "in settings.gradle gradle api : " + gradle.api  //再次存取api的时候，就不需要ext前缀了
    println "sdk dir : " + gradle.sdkdir
}
initMinshengGradleEnvironment()
include ':app'
